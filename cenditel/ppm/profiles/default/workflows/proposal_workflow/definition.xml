<?xml version="1.0"?>
<dc-workflow xmlns:i18n="http://xml.zope.org/namespaces/i18n"
             i18n:domain="plone"
             workflow_id="proposal_workflow"
             title="Proposals PPM Workflow"
             description="
- Used in conjunction with the Community workflow.
- Has no pending state.
- Allows owner to publish the folder without approval."
             state_variable="review_state"
             initial_state="draft"
             i18n:attributes="title; description">

 <permission>Modify portal content</permission>
 <permission>View</permission>

 <state state_id="draft" title="">
  <exit-transition transition_id="publish"/>
  <exit-transition transition_id="publish_in_place"/>
  <permission-map name="Modify portal content"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>Owner</permission-role>
  </permission-map>
  <permission-map name="View" acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>Owner</permission-role>
  </permission-map>
 </state>

 <state state_id="published" title="">
  <exit-transition transition_id="make_draft"/>
  <permission-map name="Modify portal content"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>Owner</permission-role>
  </permission-map>
 </state>

 <transition transition_id="make_draft"
             title="Draft"
             new_state="draft" trigger="USER"
             before_script=""
             after_script="moveToWeblogRoot">
  <action url="" category="workflow">Revert to Draft</action>
  <guard>
   <guard-expression>python: user.has_permission("Manage portal content", here) or user.has_role("Owner", here)</guard-expression>
  </guard>
 </transition>

 <transition transition_id="submitted"
             title="Submitted"
             new_state="published" trigger="USER"
             before_script="" after_script="moveToArchive">
  <action url="" category="workflow">Publish</action>
  <guard>
   <guard-expression>python: user.has_permission("Review portal content", here) or user.has_role("Owner", here)</guard-expression>
  </guard>
 </transition>

 <transition transition_id="information_needed"
             title="Information Needed"
             new_state="published" trigger="USER"
             before_script="" after_script="">
  <guard>
   <guard-expression>python: user.has_permission("Review portal content", here) or user.has_role("Owner", here)</guard-expression>
  </guard>
 </transition>

 <transition transition_id="complete"
             title="Complete"
             new_state="published" trigger="USER"
             before_script="" after_script="">
  <guard>
   <guard-expression>python: user.has_permission("Review portal content", here) or user.has_role("Owner", here)</guard-expression>
  </guard>
 </transition>

 <transition transition_id="being_reviewed"
             title="Being Reviewed"
             new_state="published" trigger="USER"
             before_script="" after_script="">
  <guard>
   <guard-expression>python: user.has_permission("Review portal content", here) or user.has_role("Owner", here)</guard-expression>
  </guard>
 </transition>

 <transition transition_id="prioritized"
             title="Prioritized"
             new_state="published" trigger="USER"
             before_script="" after_script="">
  <guard>
   <guard-expression>python: user.has_permission("Review portal content", here) or user.has_role("Owner", here)</guard-expression>
  </guard>
 </transition>

 <transition transition_id="deferred"
             title="Deferred"
             new_state="published" trigger="USER"
             before_script="" after_script="">
  <guard>
   <guard-expression>python: user.has_permission("Review portal content", here) or user.has_role("Owner", here)</guard-expression>
  </guard>
 </transition>

 <transition transition_id="approved_by_itsc"
             title="Approved by ITSC"
             new_state="published" trigger="USER"
             before_script="" after_script="">
  <guard>
   <guard-expression>python: user.has_permission("Review portal content", here) or user.has_role("Owner", here)</guard-expression>
  </guard>
 </transition>

 <transition transition_id="approved_by_city_manager"
             title="Approved by City Manager"
             new_state="published" trigger="USER"
             before_script="" after_script="">
  <guard>
   <guard-expression>python: user.has_permission("Review portal content", here) or user.has_role("Owner", here)</guard-expression>
  </guard>
 </transition>

 <transition transition_id="approved_by_city_council"
             title="Approved by City Council"
             new_state="published" trigger="USER"
             before_script="" after_script="">
  <guard>
   <guard-expression>python: user.has_permission("Review portal content", here) or user.has_role("Owner", here)</guard-expression>
  </guard>
 </transition>

 <script script_id="moveToArchive" type="External Method"
         filename="" module="Quills.workflow_scripts"
         function="moveToArchive"/>
 <script script_id="moveToWeblogRoot" type="External Method"
         filename="" module="Quills.workflow_scripts"
         function="moveToWeblogRoot"/>
</dc-workflow>
